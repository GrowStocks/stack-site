{"version":3,"sources":["reportWebVitals.ts","components/Card.tsx","components/App.tsx","components/NavBar.tsx","components/Header.tsx","components/Button.tsx","components/Banner.tsx","components/Footer.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","title","children","App","href","src","alt","NavItem","isActive","data-tooltip","label","to","icon","NavBar","Header","Button","type","Banner","target","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCKCQ,EAXF,SAACC,GACV,OACI,qBAAKC,UAAU,UAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,uBAAd,SAAuCD,EAAME,QAC7C,mBAAGD,UAAU,0BAAb,SAAyCD,EAAMG,iBCqBhDC,MA1Bf,WACE,OACE,uBAAMH,UAAU,gBAAhB,UACI,oBAAIA,UAAU,QAAd,sBACA,0BAASA,UAAU,OAAnB,UACI,cAAC,EAAD,CAAMC,MAAM,WAAZ,kMACA,cAAC,EAAD,CAAMA,MAAM,aAAZ,2LACA,eAAC,EAAD,CAAMA,MAAM,oBAAZ,2FAAgH,kDAGpH,oBAAID,UAAU,QAAd,yCACA,0BAASA,UAAU,OAAnB,UACI,mBAAGI,KAAK,yBAAR,SACI,qBAAKC,IAAI,mDAAmDC,IAAI,aAAaN,UAAU,oBAE3F,mBAAGI,KAAK,wBAAR,SACI,qBAAKC,IAAI,mDAAmDC,IAAI,YAAYN,UAAU,oBAE1F,mBAAGI,KAAK,yBAAR,SACI,qBAAKC,IAAI,wFAAwFC,IAAI,aAAaN,UAAU,2BCMtIO,G,MAAU,SAACR,GACb,OACI,qBAAKC,UAAS,wBAAqC,IAAnBD,EAAMS,SAAoB,SAAW,IAAMC,eAAcV,EAAMW,MAA/F,SACI,oBAAGN,KAAML,EAAMY,GAAf,UACI,mBAAGX,UAAU,oCAAb,SAAkDD,EAAMa,OACxD,mBAAGZ,UAAU,qBAAb,SAAmCD,EAAMW,eAM1CG,EApCA,WACX,OACI,qBAAKb,UAAU,SAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,cAAC,EAAD,CACIW,GAAG,KACHC,KAAK,OACLF,MAAM,OACNF,UAAQ,IAEZ,cAAC,EAAD,CACIG,GAAG,sCACHC,KAAK,cACLF,MAAM,kBAEV,cAAC,EAAD,CACIC,GAAG,sCACHC,KAAK,OACLF,MAAM,iBCCXI,G,MAlBA,WACX,OACI,wBAAQd,UAAU,kCAAlB,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,mBAAGI,KAAK,KAAR,SACI,2CAGR,qBAAKJ,UAAU,oBAAf,SACI,cAAC,EAAD,aCHLe,G,MARA,SAAChB,GACZ,OACI,wBAAQC,UAAS,oBAA8B,aAAfD,EAAMiB,KAAsB,sBAAwB,GAAnE,YAAwF,WAAfjB,EAAMiB,KAAoB,oBAAsB,IAA1I,SACI,sBAAMhB,UAAU,mBAAhB,SAAqCD,EAAMW,YCiBxCO,G,MAnBA,WACX,OACI,sBAAKjB,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,gBAAd,6BACA,oBAAIA,UAAU,mBAAd,iEAEJ,qBAAKA,UAAU,iBAAf,SACI,mBAAGI,KAAK,sCAAsCc,OAAO,SAArD,SACI,cAAC,EAAD,CACIF,KAAK,WACLN,MAAM,yBCAfS,G,MAZA,WACX,OACI,wBAAQnB,UAAU,SAAlB,SACI,sBAAKA,UAAU,eAAf,UACI,kFACA,0G,MCGhBoB,IAASC,OACP,eAAC,IAAMC,WAAP,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEJC,SAASC,eAAe,SAM1BnC,M","file":"static/js/main.4a3a379c.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './../scss/modules/_Card.scss';\r\n\r\nconst Card = (props: any) => {\r\n    return (\r\n        <div className=\"sc-card\">\r\n            <div className=\"sc-card__info\">\r\n                <h1 className=\"sc-card__info__title\">{ props.title }</h1>\r\n                <p className=\"sc-card__info__subtitle\">{ props.children }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\nimport Card from \"./Card\";\n\nfunction App() {\n  return (\n    <main className=\"wrap--content\">\n        <h2 className=\"title\">Features</h2>\n        <section className=\"grid\">\n            <Card title=\"Scaffold\">Scaffold is Stack's core framework. It's the magical thing that runs it all! Scaffold provides a powerful Theming API as well as component creation APIs (Color, Shape, Typography).</Card>\n            <Card title=\"Components\">Stack also provides built in components to make your frontend development easier than ever! The components can also be modified to your liking using our Theme Injection API.</Card>\n            <Card title=\"Built with &hearts;\">Stack is built using SCSS, TypeScript, years of research and development, and <b>LOVE &hearts;</b></Card>\n        </section>\n\n        <h2 className=\"title\">Companies that &hearts; Stack</h2>\n        <section className=\"flex\">\n            <a href=\"https://growstocks.xyz\">\n                <img src=\"https://avatars.githubusercontent.com/u/45097675\" alt=\"GrowStocks\" className=\"company__logo\"/>\n            </a>\n            <a href=\"https://blockcorp.xyz\">\n                <img src=\"https://avatars.githubusercontent.com/u/75997293\" alt=\"BlockCorp\" className=\"company__logo\"/>\n            </a>\n            <a href=\"https://growtopics.xyz\">\n                <img src=\"https://raw.githubusercontent.com/GrowTopics/website-client/master/public/favicon.png\" alt=\"GrowStocks\" className=\"company__logo\"/>\n            </a>\n        </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport './../scss/modules/_NavBar.scss';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className=\"sc-nav\">\r\n            <div className=\"sc-nav__container\">\r\n                <NavItem\r\n                    to=\"./\"\r\n                    icon=\"home\"\r\n                    label=\"Home\"\r\n                    isActive\r\n                />\r\n                <NavItem\r\n                    to=\"https://growstocks.gitbook.io/stack\"\r\n                    icon=\"description\"\r\n                    label=\"Documentation\"\r\n                />\r\n                <NavItem\r\n                    to=\"https://github.com/GrowStocks/stack\"\r\n                    icon=\"code\"\r\n                    label=\"GitHub\"\r\n                />\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst NavItem = (props: any) => {\r\n    return (\r\n        <div className={`sc-nav__item ${props.isActive === true ? 'active' : ''}`} data-tooltip={props.label}>\r\n            <a href={props.to}>\r\n                <p className=\"sc-nav__item__icon material-icons\">{props.icon}</p>\r\n                <p className=\"sc-nav__item__text\">{props.label}</p>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport NavBar from \"./NavBar\";\r\nimport './../scss/modules/_Header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"sc-header sc-header--scrollable\">\r\n            <div className=\"sc-header__wrap\">\r\n                <div className=\"sc-header__text\">\r\n                    <a href=\"./\">\r\n                        <h3>Stack</h3>\r\n                    </a>\r\n                </div>\r\n                <div className=\"sc-header__others\">\r\n                    <NavBar />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport './../scss/modules/_Button.scss';\r\n\r\nconst Button = (props: any) => {\r\n    return (\r\n        <button className={`sc-button ${props.type === 'outlined' ? 'sc-button--outlined' : ''} ${props.type === 'filled' ? 'sc-button--filled' : ''}`}>\r\n            <span className=\"sc-button__label\">{ props.label }</span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from \"./Button\";\r\nimport './../scss/modules/_Banner.scss';\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className=\"banner__text\">\r\n                <h2 className=\"banner__title\">Style with ease</h2>\r\n                <h5 className=\"banner__subtitle\">The magical SCSS framework that just makes sense</h5>\r\n            </div>\r\n            <div className=\"banner__action\">\r\n                <a href=\"https://growstocks.gitbook.io/stack\" target=\"_blank\">\r\n                    <Button\r\n                        type=\"outlined\"\r\n                        label=\"Get started\"\r\n                    />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport './../scss/modules/_Footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__wrap\">\r\n                <h3>Copyright Â© 2021 GrowStocks Development Group</h3>\r\n                <p>All assets outside of GrowStocks belong to their respective owners</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\n//@ts-ignore\r\nexport default Footer;\r\n//@ts-ignore\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./components/App\";\nimport Header from \"./components/Header\";\nimport Banner from \"./components/Banner\";\nimport Footer from \"./components/Footer\";\n\nimport './scss/main.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Header />\n      <Banner />\n      <App />\n      <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}